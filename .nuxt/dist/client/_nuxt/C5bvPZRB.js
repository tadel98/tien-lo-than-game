import{z as f,r as n,g as l}from"#entry";const x=f("ranking",()=>{const t=n([]),s=n(!1),o=n(null),c=n("level"),u=n(null),g=l(()=>t.value),i=l(()=>t.value.filter((a,e)=>e<10)),v=l(()=>[...t.value].sort((a,e)=>e.combatPower-a.combatPower).slice(0,10)),p=l(()=>[...t.value].sort((a,e)=>e.experience-a.experience).slice(0,10)),d=l(()=>a=>t.value.findIndex(e=>e.id===a)+1),y=async(a="level",e=20)=>{try{s.value=!0,o.value=null;const r=await $fetch(`/api/ranking/top-players?type=${a}&limit=${e}`);t.value=r.data.ranking,c.value=r.data.type,u.value=r.data.lastUpdated}catch(r){o.value=r.message,console.error("Error fetching ranking:",r)}finally{s.value=!1}};return{ranking:t,loading:s,error:o,currentType:c,lastUpdated:u,topPlayers:g,topByLevel:i,topByCombatPower:v,topByExperience:p,playerRank:d,fetchRanking:y,refreshRanking:async()=>{await y(c.value)},getPlayerStats:a=>t.value.find(e=>e.id===a),getTopPlayersByType:(a,e=10)=>{switch(a){case"combat_power":return v.value.slice(0,e);case"experience":return p.value.slice(0,e);case"level":default:return i.value.slice(0,e)}},reset:()=>{t.value=[],s.value=!1,o.value=null,c.value="level",u.value=null}}});export{x as u};
