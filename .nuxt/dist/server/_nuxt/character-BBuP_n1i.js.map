{"version":3,"file":"character-BBuP_n1i.js","sources":["../../../../stores/character.ts"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\n\r\nexport const useCharacterStore = defineStore('character', () => {\r\n  // State\r\n  const characterData = ref<any>(null)\r\n  const stats = ref<any>(null)\r\n  const equipment = ref<any[]>([])\r\n  const skills = ref<any[]>([])\r\n  const loading = ref(false)\r\n  const error = ref(null)\r\n\r\n  // Getters\r\n  const combatPower = computed(() => {\r\n    return stats.value?.combatPower || 0\r\n  })\r\n\r\n  const totalStats = computed(() => {\r\n    return stats.value?.total || {}\r\n  })\r\n\r\n  const baseStats = computed(() => {\r\n    return stats.value?.base || {}\r\n  })\r\n\r\n  const equippedItems = computed(() => {\r\n    return equipment.value.filter(item => item.isEquipped)\r\n  })\r\n\r\n  const learnedSkills = computed(() => {\r\n    return skills.value.filter(skill => skill.isLearned)\r\n  })\r\n\r\n  // Actions\r\n  const fetchCharacterData = async (playerId: string) => {\r\n    try {\r\n      loading.value = true\r\n      error.value = null\r\n\r\n      const response: any = await $fetch(`/api/character/stats?playerId=${playerId}`)\r\n      characterData.value = response.data.player\r\n      stats.value = response.data.stats\r\n      equipment.value = response.data.equipment\r\n      skills.value = response.data.skills\r\n    } catch (err: any) {\r\n      error.value = err.message\r\n      console.error('Error fetching character data:', err)\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const updateStats = async (playerId: string, newStats: any) => {\r\n    try {\r\n      loading.value = true\r\n      error.value = null\r\n\r\n      const response: any = await $fetch('/api/character/stats/update', {\r\n        method: 'POST',\r\n        body: {\r\n          playerId,\r\n          stats: newStats\r\n        }\r\n      })\r\n\r\n      // Cập nhật local state\r\n      if (stats.value) {\r\n        Object.assign(stats.value.base, newStats)\r\n      }\r\n\r\n      return response.data\r\n    } catch (err: any) {\r\n      error.value = err.message\r\n      console.error('Error updating stats:', err)\r\n      throw err\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const equipItem = async (playerId: string, equipmentId: string) => {\r\n    try {\r\n      loading.value = true\r\n      error.value = null\r\n\r\n      const response: any = await $fetch('/api/character/equipment/equip', {\r\n        method: 'POST',\r\n        body: {\r\n          playerId,\r\n          equipmentId\r\n        }\r\n      })\r\n\r\n      // Cập nhật local state\r\n      await fetchCharacterData(playerId)\r\n\r\n      return response.data\r\n    } catch (err: any) {\r\n      error.value = err.message\r\n      console.error('Error equipping item:', err)\r\n      throw err\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const unequipItem = async (playerId: string, equipmentId: string) => {\r\n    try {\r\n      loading.value = true\r\n      error.value = null\r\n\r\n      const response: any = await $fetch('/api/character/equipment/unequip', {\r\n        method: 'POST',\r\n        body: {\r\n          playerId,\r\n          equipmentId\r\n        }\r\n      })\r\n\r\n      // Cập nhật local state\r\n      await fetchCharacterData(playerId)\r\n\r\n      return response.data\r\n    } catch (err: any) {\r\n      error.value = err.message\r\n      console.error('Error unequipping item:', err)\r\n      throw err\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const learnSkill = async (playerId: string, skillId: string) => {\r\n    try {\r\n      loading.value = true\r\n      error.value = null\r\n\r\n      const response: any = await $fetch('/api/character/skills/learn', {\r\n        method: 'POST',\r\n        body: {\r\n          playerId,\r\n          skillId\r\n        }\r\n      })\r\n\r\n      // Cập nhật local state\r\n      await fetchCharacterData(playerId)\r\n\r\n      return response.data\r\n    } catch (err: any) {\r\n      error.value = err.message\r\n      console.error('Error learning skill:', err)\r\n      throw err\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const getStatColor = (stat: string) => {\r\n    const colors = {\r\n      hp: '#ef4444',\r\n      mp: '#3b82f6',\r\n      attack: '#f59e0b',\r\n      defense: '#10b981',\r\n      speed: '#8b5cf6',\r\n      luck: '#f97316',\r\n      wisdom: '#06b6d4',\r\n      strength: '#84cc16',\r\n      agility: '#ec4899',\r\n      vitality: '#14b8a6',\r\n      spirit: '#6366f1'\r\n    }\r\n    return colors[stat] || '#6b7280'\r\n  }\r\n\r\n  const getRarityColor = (rarity: string) => {\r\n    const colors = {\r\n      common: '#6b7280',\r\n      uncommon: '#10b981',\r\n      rare: '#3b82f6',\r\n      epic: '#8b5cf6',\r\n      legendary: '#f59e0b'\r\n    }\r\n    return colors[rarity] || '#6b7280'\r\n  }\r\n\r\n  const getSkillCategoryColor = (category: string) => {\r\n    const colors = {\r\n      combat: '#ef4444',\r\n      cultivation: '#8b5cf6',\r\n      crafting: '#f59e0b',\r\n      passive: '#10b981',\r\n      buff: '#06b6d4',\r\n      debuff: '#f97316'\r\n    }\r\n    return colors[category] || '#6b7280'\r\n  }\r\n\r\n  // Reset store\r\n  const reset = () => {\r\n    characterData.value = null\r\n    stats.value = null\r\n    equipment.value = []\r\n    skills.value = []\r\n    loading.value = false\r\n    error.value = null\r\n  }\r\n\r\n  return {\r\n    // State\r\n    characterData,\r\n    stats,\r\n    equipment,\r\n    skills,\r\n    loading,\r\n    error,\r\n\r\n    // Getters\r\n    combatPower,\r\n    totalStats,\r\n    baseStats,\r\n    equippedItems,\r\n    learnedSkills,\r\n\r\n    // Actions\r\n    fetchCharacterData,\r\n    updateStats,\r\n    equipItem,\r\n    unequipItem,\r\n    learnSkill,\r\n    getStatColor,\r\n    getRarityColor,\r\n    getSkillCategoryColor,\r\n    reset\r\n  }\r\n})\r\n"],"names":[],"mappings":"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"}