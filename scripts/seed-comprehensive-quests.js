const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function seedComprehensiveQuests() {
  console.log('üå± B·∫Øt ƒë·∫ßu seed quests to√†n di·ªán...')
  
  try {
    await prisma.$connect()
    console.log('‚úÖ K·∫øt n·ªëi PostgreSQL th√†nh c√¥ng!')

    // X√≥a quests c≈©
    await prisma.playerQuest.deleteMany({})
    await prisma.quest.deleteMany({})
    console.log('üóëÔ∏è ƒê√£ x√≥a quests c≈©')

    // T·∫°o quests m·ªõi
    const quests = [
      // Tutorial Quests
      {
        name: 'tutorial_welcome',
        displayName: 'Ch√†o M·ª´ng Ng∆∞·ªùi Tu Luy·ªán',
        description: 'Ho√†n th√†nh h∆∞·ªõng d·∫´n c∆° b·∫£n ƒë·ªÉ nh·∫≠n ph·∫ßn th∆∞·ªüng',
        category: 'tutorial',
        difficulty: 'easy',
        requirements: JSON.stringify({ level: 1 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 100, linh_thach: 500 },
          experience: 1000
        }),
        isRepeatable: false,
        isActive: true
      },
      {
        name: 'tutorial_cultivation',
        displayName: 'Tu Luy·ªán ƒê·∫ßu Ti√™n',
        description: 'Th·ª±c hi·ªán tu luy·ªán l·∫ßn ƒë·∫ßu ƒë·ªÉ hi·ªÉu c∆° ch·∫ø',
        category: 'tutorial',
        difficulty: 'easy',
        level: 1,
        requirements: JSON.stringify({ level: 1 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 1000, huyen_luc: 200 },
          experience: 2000
        }),
        objectives: JSON.stringify({
          type: 'cultivate',
          description: 'Tu luy·ªán 1 l·∫ßn',
          target: 1,
          current: 0
        }),
        isRepeatable: false,
        isActive: true
      },

      // Daily Quests
      {
        name: 'daily_cultivation',
        displayName: 'Tu Luy·ªán H√†ng Ng√†y',
        description: 'Tu luy·ªán ƒë·ªÉ tƒÉng c∆∞·ªùng tu vi m·ªói ng√†y',
        category: 'daily',
        difficulty: 'easy',
        level: 1,
        requirements: JSON.stringify({ level: 1 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 2000, tien_ngoc: 50 },
          experience: 5000
        }),
        objectives: JSON.stringify({
          type: 'cultivate',
          description: 'Tu luy·ªán 10 l·∫ßn',
          target: 10,
          current: 0
        }),
        isRepeatable: true,
        isActive: true
      },
      {
        name: 'daily_breakthrough',
        displayName: 'ƒê·ªôt Ph√° H√†ng Ng√†y',
        description: 'Th·ª±c hi·ªán ƒë·ªôt ph√° ƒë·ªÉ tƒÉng level',
        category: 'daily',
        difficulty: 'medium',
        level: 5,
        requirements: JSON.stringify({ level: 5 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 200, linh_thach: 5000, nguyen_thach: 100 },
          experience: 10000
        }),
        objectives: JSON.stringify({
          type: 'breakthrough',
          description: 'ƒê·ªôt ph√° 1 l·∫ßn',
          target: 1,
          current: 0
        }),
        isRepeatable: true,
        isActive: true
      },
      {
        name: 'daily_spirit_beast',
        displayName: 'SƒÉn Linh Th√∫',
        description: 'SƒÉn linh th√∫ ƒë·ªÉ thu th·∫≠p t√†i nguy√™n',
        category: 'daily',
        difficulty: 'medium',
        level: 10,
        requirements: JSON.stringify({ level: 10 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 3000, tien_ngoc: 150 },
          experience: 8000
        }),
        objectives: JSON.stringify({
          type: 'hunt_spirit_beast',
          description: 'SƒÉn linh th√∫ 5 l·∫ßn',
          target: 5,
          current: 0
        }),
        isRepeatable: true,
        isActive: true
      },

      // Weekly Quests
      {
        name: 'weekly_boss_challenge',
        displayName: 'Th·ª≠ Th√°ch Boss H√†ng Tu·∫ßn',
        description: 'ƒê√°nh b·∫°i boss m·∫°nh ƒë·ªÉ nh·∫≠n ph·∫ßn th∆∞·ªüng l·ªõn',
        category: 'weekly',
        difficulty: 'hard',
        level: 20,
        requirements: JSON.stringify({ level: 20, combatPower: 5000 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 1000, linh_thach: 20000, nguyen_thach: 500 },
          experience: 50000
        }),
        objectives: JSON.stringify({
          type: 'defeat_boss',
          description: 'ƒê√°nh b·∫°i boss c·∫•p ƒë·ªô cao',
          target: 1,
          current: 0
        }),
        isRepeatable: true,
        isActive: true
      },
      {
        name: 'weekly_cultivation_marathon',
        displayName: 'Marathon Tu Luy·ªán',
        description: 'Tu luy·ªán li√™n t·ª•c trong tu·∫ßn ƒë·ªÉ ch·ª©ng minh quy·∫øt t√¢m',
        category: 'weekly',
        difficulty: 'medium',
        level: 15,
        requirements: JSON.stringify({ level: 15 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 15000, tien_ngoc: 500 },
          experience: 30000
        }),
        objectives: JSON.stringify({
          type: 'cultivate',
          description: 'Tu luy·ªán 100 l·∫ßn',
          target: 100,
          current: 0
        }),
        isRepeatable: true,
        isActive: true
      },

      // Story Quests
      {
        name: 'story_realm_ascension',
        displayName: 'ThƒÉng C·∫£nh Gi·ªõi',
        description: 'ƒê·∫°t ƒë·∫øn c·∫£nh gi·ªõi m·ªõi trong h√†nh tr√¨nh tu luy·ªán',
        category: 'story',
        difficulty: 'hard',
        level: 50,
        requirements: JSON.stringify({ level: 50 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 2000, linh_thach: 50000, nguyen_thach: 1000 },
          experience: 100000
        }),
        objectives: JSON.stringify({
          type: 'reach_realm',
          description: 'ƒê·∫°t ƒë·∫øn c·∫£nh gi·ªõi Luy·ªán Kh√≠',
          target: 1,
          current: 0
        }),
        isRepeatable: false,
        isActive: true
      },
      {
        name: 'story_combat_mastery',
        displayName: 'Luy·ªán T·∫≠p Chi·∫øn ƒê·∫•u',
        description: 'TƒÉng c∆∞·ªùng s·ª©c m·∫°nh chi·∫øn ƒë·∫•u th√¥ng qua luy·ªán t·∫≠p',
        category: 'story',
        difficulty: 'medium',
        level: 25,
        requirements: JSON.stringify({ level: 25 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 800, linh_thach: 20000 },
          experience: 40000
        }),
        objectives: JSON.stringify({
          type: 'reach_combat_power',
          description: 'ƒê·∫°t s·ª©c m·∫°nh chi·∫øn ƒë·∫•u 10000',
          target: 10000,
          current: 0
        }),
        isRepeatable: false,
        isActive: true
      },

      // Special Quests
      {
        name: 'special_talent_awakening',
        displayName: 'Th·ª©c T·ªânh Thi√™n Ph√∫',
        description: 'K√≠ch ho·∫°t thi√™n ph√∫ ƒë·ªÉ tƒÉng c∆∞·ªùng kh·∫£ nƒÉng',
        category: 'special',
        difficulty: 'medium',
        level: 30,
        requirements: JSON.stringify({ level: 30 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 1200, linh_thach: 30000 },
          experience: 60000
        }),
        objectives: JSON.stringify({
          type: 'unlock_talent',
          description: 'M·ªü kh√≥a 3 thi√™n ph√∫',
          target: 3,
          current: 0
        }),
        isRepeatable: false,
        isActive: true
      },
      {
        name: 'special_equipment_master',
        displayName: 'B·∫≠c Th·∫ßy Trang B·ªã',
        description: 'Thu th·∫≠p v√† n√¢ng c·∫•p trang b·ªã m·∫°nh',
        category: 'special',
        difficulty: 'hard',
        level: 40,
        requirements: JSON.stringify({ level: 40 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 1500, linh_thach: 40000, nguyen_thach: 800 },
          experience: 80000
        }),
        objectives: JSON.stringify({
          type: 'equip_items',
          description: 'Trang b·ªã 5 m√≥n ƒë·ªì',
          target: 5,
          current: 0
        }),
        isRepeatable: false,
        isActive: true
      },

      // Achievement Quests
      {
        name: 'achievement_level_milestone',
        displayName: 'C·ªôt M·ªëc C·∫•p ƒê·ªô',
        description: 'ƒê·∫°t ƒë∆∞·ª£c c·ªôt m·ªëc c·∫•p ƒë·ªô quan tr·ªçng',
        category: 'achievement',
        difficulty: 'easy',
        level: 10,
        requirements: JSON.stringify({ level: 10 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 300, linh_thach: 8000 },
          experience: 15000
        }),
        objectives: JSON.stringify({
          type: 'reach_level',
          description: 'ƒê·∫°t level 25',
          target: 25,
          current: 0
        }),
        isRepeatable: false,
        isActive: true
      },
      {
        name: 'achievement_resource_collector',
        displayName: 'Thu Th·∫≠p T√†i Nguy√™n',
        description: 'Thu th·∫≠p m·ªôt l∆∞·ª£ng l·ªõn t√†i nguy√™n',
        category: 'achievement',
        difficulty: 'medium',
        level: 20,
        requirements: JSON.stringify({ level: 20 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 600, linh_thach: 15000, nguyen_thach: 300 },
          experience: 30000
        }),
        objectives: JSON.stringify({
          type: 'collect_resources',
          description: 'Thu th·∫≠p 100000 Linh Th·∫°ch',
          target: 100000,
          current: 0
        }),
        isRepeatable: false,
        isActive: true
      }
    ]

    // T·∫°o quests
    console.log('üìù T·∫°o quests...')
    for (const questData of quests) {
      await prisma.quest.create({
        data: questData
      })
    }
    console.log(`‚úÖ ƒê√£ t·∫°o ${quests.length} quests`)

    // G√°n quests cho t·∫•t c·∫£ players
    console.log('üë• G√°n quests cho players...')
    const players = await prisma.player.findMany()
    const createdQuests = await prisma.quest.findMany()

    for (const player of players) {
      for (const quest of createdQuests) {
        // Ch·ªâ g√°n quests ph√π h·ª£p v·ªõi level c·ªßa player
        const requirements = JSON.parse(quest.requirements || '{}')
        const requiredLevel = requirements.level || 1

        if (player.level >= requiredLevel) {
          await prisma.playerQuest.create({
            data: {
              playerId: player.id,
              questId: quest.id,
              status: quest.category === 'tutorial' ? 'available' : 'locked',
              progress: quest.objectives || JSON.stringify({}),
              startedAt: quest.category === 'tutorial' ? new Date() : null,
              completedAt: null
            }
          })
        }
      }
    }
    console.log(`‚úÖ ƒê√£ g√°n quests cho ${players.length} players`)

    console.log('üéâ Ho√†n th√†nh seed quests to√†n di·ªán!')
    
  } catch (error) {
    console.error('‚ùå L·ªói seed quests:', error)
  } finally {
    await prisma.$disconnect()
  }
}

seedComprehensiveQuests()
