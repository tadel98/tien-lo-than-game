const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function updateQuestCooldown() {
  console.log('üïê C·∫≠p nh·∫≠t quest cooldown th√†nh s·ªë ph√∫t...')
  
  try {
    await prisma.$connect()
    console.log('‚úÖ K·∫øt n·ªëi PostgreSQL th√†nh c√¥ng!')

    // X√≥a quests c≈©
    await prisma.playerQuest.deleteMany({})
    await prisma.quest.deleteMany({})
    console.log('üóëÔ∏è ƒê√£ x√≥a quests c≈©')

    // T·∫°o quests m·ªõi v·ªõi cooldown theo ph√∫t
    const quests = [
      // Tutorial Quests (kh√¥ng cooldown)
      {
        name: 'tutorial_welcome',
        displayName: 'Ch√†o M·ª´ng Ng∆∞·ªùi Tu Luy·ªán',
        description: 'Ho√†n th√†nh h∆∞·ªõng d·∫´n c∆° b·∫£n ƒë·ªÉ nh·∫≠n ph·∫ßn th∆∞·ªüng',
        category: 'tutorial',
        difficulty: 'easy',
        requirements: JSON.stringify({ level: 1 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 100, linh_thach: 500 },
          experience: 1000
        }),
        isRepeatable: false,
        isActive: true
      },
      {
        name: 'tutorial_cultivation',
        displayName: 'Tu Luy·ªán ƒê·∫ßu Ti√™n',
        description: 'Th·ª±c hi·ªán tu luy·ªán l·∫ßn ƒë·∫ßu ƒë·ªÉ hi·ªÉu c∆° ch·∫ø',
        category: 'tutorial',
        difficulty: 'easy',
        requirements: JSON.stringify({ level: 1 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 1000, huyen_luc: 200 },
          experience: 2000
        }),
        isRepeatable: false,
        isActive: true
      },

      // Quick Quests (5-15 ph√∫t)
      {
        name: 'quick_cultivation',
        displayName: 'Tu Luy·ªán Nhanh',
        description: 'Tu luy·ªán nhanh ƒë·ªÉ tƒÉng kinh nghi·ªám',
        category: 'quick',
        difficulty: 'easy',
        requirements: JSON.stringify({ level: 1 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 800, tien_ngoc: 20 },
          experience: 2000
        }),
        isRepeatable: true,
        repeatInterval: 5, // 5 ph√∫t
        isActive: true
      },
      {
        name: 'quick_meditation',
        displayName: 'Thi·ªÅn ƒê·ªãnh Nhanh',
        description: 'Thi·ªÅn ƒë·ªãnh ƒë·ªÉ tƒÉng tu vi',
        category: 'quick',
        difficulty: 'easy',
        requirements: JSON.stringify({ level: 3 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 1200, tien_ngoc: 30 },
          experience: 3000
        }),
        isRepeatable: true,
        repeatInterval: 10, // 10 ph√∫t
        isActive: true
      },
      {
        name: 'quick_energy_gathering',
        displayName: 'Thu Th·∫≠p NƒÉng L∆∞·ª£ng',
        description: 'Thu th·∫≠p nƒÉng l∆∞·ª£ng thi√™n nhi√™n',
        category: 'quick',
        difficulty: 'easy',
        requirements: JSON.stringify({ level: 5 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 1500, huyen_luc: 100 },
          experience: 4000
        }),
        isRepeatable: true,
        repeatInterval: 15, // 15 ph√∫t
        isActive: true
      },

      // Short Quests (20-35 ph√∫t)
      {
        name: 'short_breakthrough',
        displayName: 'ƒê·ªôt Ph√° Ng·∫Øn',
        description: 'Th·ª±c hi·ªán ƒë·ªôt ph√° nh·ªè ƒë·ªÉ tƒÉng level',
        category: 'short',
        difficulty: 'medium',
        requirements: JSON.stringify({ level: 8 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 80, linh_thach: 2000, nguyen_thach: 50 },
          experience: 8000
        }),
        isRepeatable: true,
        repeatInterval: 20, // 20 ph√∫t
        isActive: true
      },
      {
        name: 'short_spirit_beast',
        displayName: 'SƒÉn Linh Th√∫ Ng·∫Øn',
        description: 'SƒÉn linh th√∫ nh·ªè ƒë·ªÉ thu th·∫≠p t√†i nguy√™n',
        category: 'short',
        difficulty: 'medium',
        requirements: JSON.stringify({ level: 12 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 2500, tien_ngoc: 60 },
          experience: 10000
        }),
        isRepeatable: true,
        repeatInterval: 25, // 25 ph√∫t
        isActive: true
      },
      {
        name: 'short_equipment_training',
        displayName: 'Luy·ªán T·∫≠p Trang B·ªã',
        description: 'Luy·ªán t·∫≠p v·ªõi trang b·ªã ƒë·ªÉ tƒÉng ƒë·ªô b·ªÅn',
        category: 'short',
        difficulty: 'medium',
        requirements: JSON.stringify({ level: 15 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 100, linh_thach: 3000 },
          experience: 12000
        }),
        isRepeatable: true,
        repeatInterval: 30, // 30 ph√∫t
        isActive: true
      },
      {
        name: 'short_talent_practice',
        displayName: 'Luy·ªán Thi√™n Ph√∫',
        description: 'Luy·ªán t·∫≠p thi√™n ph√∫ ƒë·ªÉ tƒÉng kh·∫£ nƒÉng',
        category: 'short',
        difficulty: 'medium',
        requirements: JSON.stringify({ level: 18 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 120, linh_thach: 3500, nguyen_thach: 80 },
          experience: 15000
        }),
        isRepeatable: true,
        repeatInterval: 35, // 35 ph√∫t
        isActive: true
      },

      // Medium Quests (40-60 ph√∫t)
      {
        name: 'medium_cultivation_session',
        displayName: 'Phi√™n Tu Luy·ªán Trung B√¨nh',
        description: 'Phi√™n tu luy·ªán d√†i ƒë·ªÉ tƒÉng ƒë√°ng k·ªÉ tu vi',
        category: 'medium',
        difficulty: 'medium',
        requirements: JSON.stringify({ level: 20 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 5000, tien_ngoc: 150 },
          experience: 20000
        }),
        isRepeatable: true,
        repeatInterval: 40, // 40 ph√∫t
        isActive: true
      },
      {
        name: 'medium_boss_hunt',
        displayName: 'SƒÉn Boss Trung B√¨nh',
        description: 'SƒÉn boss m·∫°nh ƒë·ªÉ nh·∫≠n ph·∫ßn th∆∞·ªüng l·ªõn',
        category: 'medium',
        difficulty: 'hard',
        requirements: JSON.stringify({ level: 25, combatPower: 3000 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 200, linh_thach: 6000, nguyen_thach: 150 },
          experience: 25000
        }),
        isRepeatable: true,
        repeatInterval: 45, // 45 ph√∫t
        isActive: true
      },
      {
        name: 'medium_realm_exploration',
        displayName: 'Kh√°m Ph√° C·∫£nh Gi·ªõi',
        description: 'Kh√°m ph√° c·∫£nh gi·ªõi m·ªõi ƒë·ªÉ t√¨m t√†i nguy√™n qu√Ω',
        category: 'medium',
        difficulty: 'hard',
        requirements: JSON.stringify({ level: 30 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 250, linh_thach: 8000, nguyen_thach: 200 },
          experience: 30000
        }),
        isRepeatable: true,
        repeatInterval: 50, // 50 ph√∫t
        isActive: true
      },
      {
        name: 'medium_spirit_awakening',
        displayName: 'Th·ª©c T·ªânh Linh H·ªìn',
        description: 'Th·ª©c t·ªânh linh h·ªìn ƒë·ªÉ tƒÉng s·ª©c m·∫°nh tinh th·∫ßn',
        category: 'medium',
        difficulty: 'hard',
        requirements: JSON.stringify({ level: 35 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 300, linh_thach: 10000, nguyen_thach: 250 },
          experience: 35000
        }),
        isRepeatable: true,
        repeatInterval: 55, // 55 ph√∫t
        isActive: true
      },
      {
        name: 'medium_artifact_crafting',
        displayName: 'Ch·∫ø T·∫°o Ph√°p B·∫£o',
        description: 'Ch·∫ø t·∫°o ph√°p b·∫£o m·∫°nh ƒë·ªÉ tƒÉng s·ª©c m·∫°nh',
        category: 'medium',
        difficulty: 'hard',
        requirements: JSON.stringify({ level: 40 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 350, linh_thach: 12000, nguyen_thach: 300 },
          experience: 40000
        }),
        isRepeatable: true,
        repeatInterval: 60, // 60 ph√∫t
        isActive: true
      },

      // Long Quests (90-120 ph√∫t)
      {
        name: 'long_cultivation_marathon',
        displayName: 'Marathon Tu Luy·ªán',
        description: 'Tu luy·ªán li√™n t·ª•c trong th·ªùi gian d√†i',
        category: 'long',
        difficulty: 'hard',
        requirements: JSON.stringify({ level: 45 }),
        rewards: JSON.stringify({
          resources: { linh_thach: 20000, tien_ngoc: 500 },
          experience: 60000
        }),
        isRepeatable: true,
        repeatInterval: 90, // 90 ph√∫t
        isActive: true
      },
      {
        name: 'long_dragon_slaying',
        displayName: 'Tr·∫£m Long',
        description: 'ƒê√°nh b·∫°i r·ªìng ƒë·ªÉ nh·∫≠n ph·∫ßn th∆∞·ªüng huy·ªÅn tho·∫°i',
        category: 'long',
        difficulty: 'expert',
        requirements: JSON.stringify({ level: 50, combatPower: 10000 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 800, linh_thach: 25000, nguyen_thach: 500 },
          experience: 80000
        }),
        isRepeatable: true,
        repeatInterval: 105, // 105 ph√∫t
        isActive: true
      },
      {
        name: 'long_realm_ascension',
        displayName: 'ThƒÉng C·∫£nh Gi·ªõi Cao',
        description: 'ThƒÉng l√™n c·∫£nh gi·ªõi cao h∆°n',
        category: 'long',
        difficulty: 'expert',
        requirements: JSON.stringify({ level: 60 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 1000, linh_thach: 30000, nguyen_thach: 600 },
          experience: 100000
        }),
        isRepeatable: true,
        repeatInterval: 120, // 120 ph√∫t
        isActive: true
      },

      // Story Quests (kh√¥ng cooldown)
      {
        name: 'story_combat_mastery',
        displayName: 'Luy·ªán T·∫≠p Chi·∫øn ƒê·∫•u',
        description: 'TƒÉng c∆∞·ªùng s·ª©c m·∫°nh chi·∫øn ƒë·∫•u th√¥ng qua luy·ªán t·∫≠p',
        category: 'story',
        difficulty: 'medium',
        requirements: JSON.stringify({ level: 25 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 800, linh_thach: 20000 },
          experience: 40000
        }),
        isRepeatable: false,
        isActive: true
      },
      {
        name: 'story_talent_discovery',
        displayName: 'Kh√°m Ph√° Thi√™n Ph√∫',
        description: 'Kh√°m ph√° v√† ph√°t tri·ªÉn thi√™n ph√∫ c·ªßa b·∫£n th√¢n',
        category: 'story',
        difficulty: 'medium',
        requirements: JSON.stringify({ level: 30 }),
        rewards: JSON.stringify({
          resources: { tien_ngoc: 1200, linh_thach: 30000 },
          experience: 60000
        }),
        isRepeatable: false,
        isActive: true
      }
    ]

    // T·∫°o quests
    console.log('üìù T·∫°o quests v·ªõi cooldown theo ph√∫t...')
    for (const questData of quests) {
      await prisma.quest.create({
        data: questData
      })
    }
    console.log(`‚úÖ ƒê√£ t·∫°o ${quests.length} quests`)

    // G√°n quests cho t·∫•t c·∫£ players
    console.log('üë• G√°n quests cho players...')
    const players = await prisma.player.findMany()
    const createdQuests = await prisma.quest.findMany()

    for (const player of players) {
      for (const quest of createdQuests) {
        // Ch·ªâ g√°n quests ph√π h·ª£p v·ªõi level c·ªßa player
        const requirements = JSON.parse(quest.requirements || '{}')
        const requiredLevel = requirements.level || 1

        if (player.level >= requiredLevel && quest.isActive) {
          await prisma.playerQuest.create({
            data: {
              playerId: player.id,
              questId: quest.id,
              status: quest.category === 'tutorial' ? 'available' : 'locked',
              progress: JSON.stringify({
                type: quest.name,
                description: quest.displayName,
                target: 1,
                current: 0
              }),
              startedAt: quest.category === 'tutorial' ? new Date() : null,
              completedAt: null
            }
          })
        }
      }
    }
    console.log(`‚úÖ ƒê√£ g√°n quests cho ${players.length} players`)

    // B√°o c√°o k·∫øt qu·∫£
    const questCount = await prisma.quest.count()
    const playerQuestCount = await prisma.playerQuest.count()
    
    console.log(`\nüìä K·∫øt qu·∫£:`)
    console.log(`- Quests: ${questCount}`)
    console.log(`- Player Quests: ${playerQuestCount}`)
    
    // Hi·ªÉn th·ªã cooldown breakdown
    console.log(`\n‚è∞ Cooldown Breakdown:`)
    console.log(`- Quick (5-15 ph√∫t): 3 quests`)
    console.log(`- Short (20-35 ph√∫t): 4 quests`)
    console.log(`- Medium (40-60 ph√∫t): 5 quests`)
    console.log(`- Long (90-120 ph√∫t): 3 quests`)
    console.log(`- Tutorial/Story (kh√¥ng cooldown): 4 quests`)

    console.log('üéâ Ho√†n th√†nh c·∫≠p nh·∫≠t quest cooldown!')
    
  } catch (error) {
    console.error('‚ùå L·ªói c·∫≠p nh·∫≠t quest cooldown:', error)
  } finally {
    await prisma.$disconnect()
  }
}

updateQuestCooldown()
