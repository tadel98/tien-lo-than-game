const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkCombatPower() {
  try {
    console.log('‚öîÔ∏è Ki·ªÉm tra s·ª©c m·∫°nh chi·∫øn ƒë·∫•u...')

    const player = await prisma.player.findFirst({
      include: {
        stats: true,
        resources: {
          include: { resource: true }
        }
      }
    })

    if (!player) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi ch∆°i')
      return
    }

    console.log(`üë§ Player: ${player.name} (Level ${player.level})`)

    // Hi·ªÉn th·ªã stats
    if (player.stats) {
      console.log('\nüìä Stats:')
      console.log(`   HP: ${player.stats.hp}`)
      console.log(`   MP: ${player.stats.mp}`)
      console.log(`   Attack: ${player.stats.attack}`)
      console.log(`   Defense: ${player.stats.defense}`)
      console.log(`   Speed: ${player.stats.speed}`)
      console.log(`   Luck: ${player.stats.luck}`)
      console.log(`   Wisdom: ${player.stats.wisdom}`)
      console.log(`   Strength: ${player.stats.strength}`)
      console.log(`   Agility: ${player.stats.agility}`)
      console.log(`   Vitality: ${player.stats.vitality}`)
      console.log(`   Spirit: ${player.stats.spirit}`)
    }

    // Hi·ªÉn th·ªã s·ª©c m·∫°nh chi·∫øn ƒë·∫•u
    const combatPowerResource = player.resources.find(r => r.resource.name === 'suc_manh_chien_dau')
    if (combatPowerResource) {
      console.log(`\n‚öîÔ∏è S·ª©c m·∫°nh chi·∫øn ƒë·∫•u: ${combatPowerResource.amount}`)
    } else {
      console.log('\n‚ùå Kh√¥ng t√¨m th·∫•y s·ª©c m·∫°nh chi·∫øn ƒë·∫•u')
    }

    // Hi·ªÉn th·ªã t·∫•t c·∫£ resources
    console.log('\nüíé T·∫•t c·∫£ resources:')
    player.resources.forEach(pr => {
      console.log(`   ${pr.resource.displayName}: ${pr.amount}`)
    })

  } catch (error) {
    console.error('‚ùå L·ªói:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkCombatPower()
